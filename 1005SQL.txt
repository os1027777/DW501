-- <1005>
-- 정렬 order 
-- 내림차순 desc / 오름차순 asc (쓰든말든 상관 ㄴ)
-- order by에 default(= 오름차순) 정렬은 오름차순
-- 실행순서 from -> where -> select -> order by 
SELECT ename, sal FROM emp ORDER BY 2 DESC
-- 사원들의 사원 이름, 입사날짜 조회
-- 단, 입사날짜를 내림차순 하시오
-- order by 작성시 컬럼 위치 쓰지 않고 컬럼 이름 작성하자!! (생각할겨를이 없도록)
SELECT ename, HIREDATE FROM emp ORDER hiredate DESC
-- 이름 검색 LIKE 이용해서 이름에 A가 한번이라도 들어간 사원
SELECT ename FROM emp WHERE ename LIKE "%A%"
-- 성이 A로 시작하는 사원 검색
SELECT ENAME FROM EMP WHERE ENAME LIKE "A%" 
-- 값이 NULL인 컬럼 조회할 때 사용 IS NULL
SELECT COMM FROM EMP WHERE COMM IS NULL 
-- NULL이 아닌 사원 조회 IS NOT NULL
SELECT COMM FROM EMP WHERE COMM IS NOT NULL
-- IFNULL : NULL인 컬럼을 "임시"로 다른 데이터로 채워줌
SELECT IFNULL (COMM,50) FROM EMP  
-- GROUP BY
-- SUM, MAX, MIN, AVG, COUNT
SELECT JOB, COUNT(*) FROM EMP GROUP BY JOB
-- 부서별로 그룹핑 조회
SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO 
-- 부서번호별 그룹핑 조회 , 부서별 평균 급여 조회
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO ORDER BY AVG(SAL)
-- GROUP BY 필터링
-- WHERE 조건에는 SUM, AVG, MAX ... 같은 함수를 사용할 수 없다. 
-- 그래서 나온 것이 HAVING 
SELECT JOB, SUM(SAL) FROM EMP GROUP BY JOB HAVING SUM(SAL) >= 5000 
-- HAVING은 GROUP BY 뒤에 온다.
SELECT JOB, AVG(SAL) FROM EMP WHERE JOB = 'MANAGER' GROUP BY JOB 
HAVING AVG(SAL) >= 2000 ORDER BY AVG(SAL) DESC
-- FROM -> WHERE -> GROUP BY -> HAVING -> SELECT -> ORDER BY
-- 사원번호는 그룹핑 될 수 없다.
SELECT empno FROM emp GROUP BY EMPNO 